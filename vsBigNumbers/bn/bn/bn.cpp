/*
Смоделировать операцию деления целого числа длиной до 30 десятичных цифр на
действительное число в форме (zn)m.n Е N, где суммарная длина мантиссы (m+n)
– до 30 значащих цифр, а величина порядка N – до 5 цифр.

Результат выдать в форме (zn)0.m1 Е N1.

Условные обозначения (zn) – знак числа N, N1 – величина порядка E – основание
числа. Запись числа (zn)0.m Е N соответствует следующей записи числа
N mzn 10 *. 0) ( . Например, число 2.5 можно записать в виде: +0.25 E+1.

Порядок выполнения работы:
1.  Определить структуру данных для хранения длинного числа.
2.  Предусмотреть ввод и вывод чисел обязательно в том формате, который указан
в задании.
3.  Разбивать число на составляющие при вводе нельзя (т.е. число должно
считываться сразу полностью).
4.  STL не пользоваться.
*/

#include "stdafx.h"
#include "BigInt.h"
#include "BigFloat.h"
#include "bn_functions.h"

int main()
{	
/*	
	BigFloat a("+1.2345 E+5"); // 123450
	std::cout
		<< "a(+1.2345 E+5): " << a << "\n\n"
		;

	BigFloat b("+1.2345 E-3"); // 0.0012345
	std::cout
		<< "b(+1.2345 E-3): " << b << "\n\n"
		;




	BigFloat m("0");
	std::cout
		<< "m(0): " << m << "\n\n"
		;

	BigFloat n("0.0");
	std::cout
		<< "n(0.0): " << n << "\n\n"
		;
*/

	BigFloat a;
	BigFloat b;

	std::string choice = "y";
	while (choice[0] == 'y' || choice[0] == 'Y')
	{
		std::cout << "Enter two big floating numbers one by one:\n";
		std::cin >> a >> b;
		std::cout
			<< "\nx: " << a
			<< "\ny: " << b
			<< "\nx + y: " << a + b
			<< "\nx - y: " << a - b
			<< "\n\nDo you want proceed? (y/n) ";
		std::cin >> choice;
		std::cout << "\n\n";
	}

	return 0;
}