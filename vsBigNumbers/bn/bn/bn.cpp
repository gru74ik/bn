/*
Смоделировать операцию деления целого числа длиной до 30 десятичных цифр на
действительное число в форме (zn)m.n Е N, где суммарная длина мантиссы (m+n)
– до 30 значащих цифр, а величина порядка N – до 5 цифр.

Результат выдать в форме (zn)0.m1 Е N1.

Условные обозначения (zn) – знак числа N, N1 – величина порядка E – основание
числа. Запись числа (zn)0.m Е N соответствует следующей записи числа
N mzn 10 *. 0) ( . Например, число 2.5 можно записать в виде: +0.25 E+1.

Порядок выполнения работы:
1.  Определить структуру данных для хранения длинного числа.
2.  Предусмотреть ввод и вывод чисел обязательно в том формате, который указан
в задании.
3.  Разбивать число на составляющие при вводе нельзя (т.е. число должно
считываться сразу полностью).
4.  STL не пользоваться.
*/

#include "stdafx.h"
#include "BigInt.h"
#include "BigFloat.h"
#include "bn_functions.h"

int main()
{
/*
	BigFloat c("123.45");
	// число: 123.45
	// на выходе должно быть: +1.2347 Е+2
	std::cout
		<< "c: "
		<< c
		<< "\n\n"
		;
*/
/*
	BigFloat d("0.089");
	// число: 0.089
	// на выходе должно быть: +8.9 Е-2
	std::cout
		<< "d: "
		<< d
		<< "\n\n"
		;
*/
/*
	std::cout
		<< "c + d = "
		<< (c + d)
		<< "\n\n"
		;
*/
/*
	BigInt x("0000000000000000000000000000000000001984");
	BigInt y("02000");
	BigInt z("000777000999000");

	std::cout
		<< "x: " << x << "\n\n"
		<< "y: " << y << "\n\n"
		<< "z: " << z << "\n\n"
		;
*/
	BigFloat a("+1234.5");
	BigFloat b("-1234.5");
	BigFloat c("1234.5");

	BigFloat d("+1.2345 E+3");
	BigFloat e("-1.2345 E+3");
	BigFloat f("1.23415 E+3");

	BigFloat g("+1.2345 e+3");
	BigFloat h("-1.2345 e+3");
	BigFloat i("1.23415 e+3");

	BigFloat j("+0000.0012340");
	BigFloat k("-0000.0012340");
	BigFloat l("0000.0012340");

	BigFloat m("+0.0012345 E-3");
	BigFloat n("-0.0012345 E-3");
	BigFloat o("0.0012345 E-3");

	BigFloat p("+000.001234500 e-3");
	BigFloat q("-000.001234500 e-3");
	BigFloat r("000.001234500 e-3");

	std::cout
		<< "a(\"+1234.5\"): " << a << "\n"
		<< "b(\"-1234.5\"): " << b << "\n"
		<< "c(\"1234.5\"): " << c << "\n\n"

		<< "d(\"+1.2345 E+3\"): " << d << "\n"
		<< "e(\"-1.2345 E+3\"): " << e << "\n"
		<< "f(\"1.2345 E+3\"): " << f << "\n\n"

		<< "g(\"+1.2345 e+3\"): " << g << "\n"
		<< "h(\"-1.2345 e+3\"): " << h << "\n"
		<< "i(\"1.2345 e+3\"): " << i << "\n\n"

		<< "j(\"+0000.0012340\"): " << j << "\n"
		<< "k(\"-0000.0012340\"): " << k << "\n"
		<< "l(\"0000.0012340\"): " << l << "\n\n"

		<< "m(\"+0.0012345 E-3\"): " << m << "\n"
		<< "n(\"-0.0012345 E-3\"): " << n << "\n"
		<< "o(\"0.0012345 E-3\"): " << o << "\n\n"

		<< "p(\"+000.001234500 e-3\"): " << p << "\n"
		<< "q(\"-000.001234500 e-3\"): " << q << "\n"
		<< "r(\"000.001234500 e-3\"): " << r << "\n\n"
		;

/*
	std::string choice = "y";
	while (choice[0] == 'y' || choice[0] == 'Y')
	{
		std::cout << "Enter two big floating point numbers one by one:\n";
		std::cin >> m >> s;
		std::cout
			<< "m - s = " << (m - s) << "\n\n"
			<< "Do you want proceed? (y/n)";
		std::cin >> choice;
		std::cout << "\n\n";
	}
*/

/*	
	std::cout << "The number a before all is: +1.23456 E+5\n\n";
	BigFloat a("+2.95638 E+3"); // 2956.38
	std::cout << "a: " << a << "\n\n";

	std::cout << "The number b before all is: +1.23456 E+5\n\n";
	BigFloat b("+4.9799 E+1"); // 49.799
	std::cout << "b: " << b << "\n\n";

	std::cout << "a - b: " << (a - b) << "\n\n";
*/

	return 0;
}